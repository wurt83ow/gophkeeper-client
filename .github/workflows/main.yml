name: Build and Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goversion: [1.21]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: go build -ldflags "-X main.version=${GITHUB_REF#refs/tags/} -X 'main.buildTime=$(date -u +'%Y-%m-%dT%H:%M:%SZ')'" -o gophkeeper-${{ runner.os }} ./cmd/gophkeeper

      - name: Compress artifact
        run: |
          tar -czf gophkeeper-${{ runner.os }}.tar.gz gophkeeper-${{ runner.os }}
          echo "Compressed artifact:"
          ls gophkeeper-${{ runner.os }}.tar.gz

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: gophkeeper-${{ runner.os }}
          path: ./gophkeeper-${{ runner.os }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Show downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          ls

      - name: Show uploaded artifacts for Linux
        run: |
          echo "Uploaded artifacts for Linux:"
          ls ./gophkeeper-Linux.tar.gz

      - name: Show uploaded artifacts for Windows
        run: |
          echo "Uploaded artifacts for Windows:"
          ls ./gophkeeper-Windows.tar.gz

      - name: Show uploaded artifacts for macOS
        run: |
          echo "Uploaded artifacts for macOS:"
          ls ./gophkeeper-macOS.tar.gz

      - name: Upload Release Asset (Ubuntu)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gophkeeper-Linux.tar.gz
          asset_name: gophkeeper-Linux.tar.gz
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gophkeeper-Windows.tar.gz
          asset_name: gophkeeper-Windows.tar.gz
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gophkeeper-macOS.tar.gz
          asset_name: gophkeeper-macOS.tar.gz
          asset_content_type: application/octet-stream
