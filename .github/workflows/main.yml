name: Build and Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        goversion: [1.21]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: go build -ldflags "-X main.version=${GITHUB_REF#refs/tags/} -X 'main.buildTime=$(date -u +'%Y-%m-%dT%H:%M:%SZ')'" -o gophkeeper-${{ runner.os }} ./cmd/gophkeeper

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gophkeeper-${{ runner.os }}
          asset_name: gophkeeper-${{ runner.os }}
          asset_content_type: application/octet-stream

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
